apiVersion: apps/v1
kind: Deployment
metadata:
  name: gobgp-router
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gobgp-router
  template:
    metadata:
      labels:
        app: gobgp-router
    spec:
      containers:
        - name: gobgp-router
          image: majedur708/hlf-api:300.15  # Your multi-router image here
          ports:
            - containerPort: 50051   # Router1 API port
            - containerPort: 50052   # Router2 API port
            - containerPort: 179     # Router1 BGP port
            - containerPort: 180     # Router2 BGP port
          securityContext:
            runAsUser: 0
            capabilities:
              add: ["NET_BIND_SERVICE"]

---
apiVersion: v1
kind: Service
metadata:
  name: gobgp-service
spec:
  selector:
    app: gobgp-router
  ports:
    - name: router1-api
      port: 50051
      targetPort: 50051
    - name: router2-api
      port: 50052
      targetPort: 50052
    - name: router1-bgp
      port: 179
      targetPort: 179
    - name: router2-bgp
      port: 180
      targetPort: 180
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gobgp-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gobgp-api
  template:
    metadata:
      labels:
        app: gobgp-api
    spec:
      containers:
        - name: gobgp-api
          image: majedur708/hlf-api:50.6
          ports:
            - containerPort: 2000
          env:
            - name: GOBGPD_ADDR
              value: "gobgp-service:50051"  # Connects to router1 API via service
          resources:
            requests:
              memory: "250Mi"
              cpu: "200m"
            limits:
              memory: "350Mi"
              cpu: "300m"

---
apiVersion: v1
kind: Service
metadata:
  name: gobgp-api
spec:
  selector:
    app: gobgp-api
  ports:
    - port: 2000
      targetPort: 2000
      protocol: TCP
  type: ClusterIP

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: gobgp-configs
# data:
#   router1.conf: |
#     [global.config]
#       as = 200
#       router-id = "10.1.1.1"
#       port = 179

#     [[neighbors]]
#       [neighbors.config]
#         neighbor-address = "127.0.0.2"
#         peer-as = 100
#       [neighbors.transport.config]
#         remote-port = 180

#     [[neighbors]]
#       [neighbors.config]
#         neighbor-address = "127.0.0.3"
#         peer-as = 300
#       [neighbors.transport.config]
#         remote-port = 181

#   router2.conf: |
#     [global.config]
#       as = 100
#       router-id = "10.0.0.1"
#       port = 180

#     [[neighbors]]
#       [neighbors.config]
#         neighbor-address = "127.0.0.1"
#         peer-as = 200
#       [neighbors.transport.config]
#         remote-port = 179

#   router3.conf: |
#     [global.config]
#       as = 300
#       router-id = "10.0.0.2"
#       port = 181

#     [[neighbors]]
#       [neighbors.config]
#         neighbor-address = "127.0.0.1"
#         peer-as = 200
#       [neighbors.transport.config]
#         remote-port = 179

# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: gobgp-routers
#   labels:
#     app: gobgp-routers
# spec:
#   restartPolicy: Always
#   containers:
#     - name: gobgp-router1
#       image: jauderho/gobgp:latest
#       command: ["gobgpd", "-f", "/gobgp/router1.conf", "--api-hosts", "0.0.0.0:50051"]
#       ports:
#         - containerPort: 179
#         - containerPort: 50051
#       volumeMounts:
#         - name: gobgp-conf
#           mountPath: /gobgp/router1.conf
#           subPath: router1.conf
#       securityContext:
#         runAsUser: 0
#         capabilities:
#           add: ["NET_BIND_SERVICE"]

#     - name: gobgp-router2
#       image: jauderho/gobgp:latest
#       command: ["gobgpd", "-f", "/gobgp/router2.conf", "--api-hosts", "0.0.0.0:50052"]
#       ports:
#         - containerPort: 180
#         - containerPort: 50052
#       volumeMounts:
#         - name: gobgp-conf
#           mountPath: /gobgp/router2.conf
#           subPath: router2.conf
#       securityContext:
#         runAsUser: 0
#         capabilities:
#           add: ["NET_BIND_SERVICE"]

#     - name: gobgp-router3
#       image: jauderho/gobgp:latest
#       command: ["gobgpd", "-f", "/gobgp/router3.conf", "--api-hosts", "0.0.0.0:50053"]
#       ports:
#         - containerPort: 181
#         - containerPort: 50053
#       volumeMounts:
#         - name: gobgp-conf
#           mountPath: /gobgp/router3.conf
#           subPath: router3.conf
#       securityContext:
#         runAsUser: 0
#         capabilities:
#           add: ["NET_BIND_SERVICE"]

#   volumes:
#     - name: gobgp-conf
#       configMap:
#         name: gobgp-configs

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: gobgp-service
# spec:
#   selector:
#     app: gobgp-routers
#   ports:
#     - name: router1-api
#       port: 50051
#       targetPort: 50051
#     - name: router2-api
#       port: 50052
#       targetPort: 50052
#     - name: router3-api
#       port: 50053
#       targetPort: 50053
#   type: ClusterIP

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: gobgp-api
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: gobgp-api
#   template:
#     metadata:
#       labels:
#         app: gobgp-api
#     spec:
#       containers:
#         - name: gobgp-api
#           image: majedur708/hlf-api:50.6
#           ports:
#             - containerPort: 2000
#           env:
#             - name: GOBGPD_ADDR
#               value: "gobgp-service:50051"
#           resources:
#             requests:
#               memory: "250Mi"
#               cpu: "200m"
#             limits:
#               memory: "350Mi"
#               cpu: "300m"

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: gobgp-api
# spec:
#   selector:
#     app: gobgp-api
#   ports:
#     - port: 2000
#       targetPort: 2000
#       protocol: TCP
#   type: ClusterIP







